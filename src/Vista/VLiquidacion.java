/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vista;

import Conexion.Conexion;
import Controlador.CtrlAbono;
import Controlador.CtrlLiquidacion;
import Controlador.LiquidacionPdf;
import Modelo.Abono;
import Modelo.Liquidacion;
import static Vista.VAbono.text_cobrar;
import static Vista.VAbono.text_importeTotal;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.swing.JOptionPane;

/**
 *
 * @author Angelica Guerrero
 */
public class VLiquidacion extends javax.swing.JInternalFrame {
    private FMenu ventana;
    private FMenu menu;
    private Vector<Integer> idCliente = new Vector<>();
    private Vector<Integer> idUsuario = new Vector<>();
    
    /**
     * Creates new form VAbono
     */
    public VLiquidacion(FMenu ventana) {
        initComponents();
        this.ventana=ventana;
        this.ventana.mostrarImagenDeFondo();
        this.setSize(1366,666); //minimas dimensiones cuando se oprime el botón maximizar
        this.menu=ventana;
        this.cargarComboClientes();
        this.cargarComboUsuarios();
        text_articulo.setEditable(false);
        text_importeTotal.setEditable(false);
        text_abonos.setEditable(false);
        text_cobrar.setEditable(false);
        text_liquidacion.setEnabled(false);
        text_fecha.setEnabled(false);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        Date currentDateAndTime = new Date(System.currentTimeMillis());
        text_fecha.setText(sdf.format(currentDateAndTime));

        cmb_cliente.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                // Obtener el cliente seleccionado del combo box
                String clienteSeleccionado = cmb_cliente.getSelectedItem().toString();
                if (!clienteSeleccionado.equals("Seleccione cliente")) {
                    Connection cn = Conexion.Conectar();
                    String sql = "SELECT c.id_cliente, CONCAT(c.nombre_cliente, ' ', c.apellidos_cliente) AS cliente, GROUP_CONCAT(CONCAT(tr.cantidad, ' ', a.nombre_articulo, ' - ', a.descripcion_articulo, ' - $', a.precio_articulo) SEPARATOR '\\n') AS articulos_comprados, GROUP_CONCAT(CONCAT('Abono de ', ab.monto_abono, ' el ', ab.fecha_abono)SEPARATOR '\\n') AS abonos_realizados, dt.importe_total AS importe, dt.valorPagar AS cobrar, dt.aCuenta AS cuenta FROM cliente AS c JOIN datos_transaccion AS dt ON c.id_cliente = dt.id_cliente INNER JOIN transacciones AS tr ON dt.id_datosTransaccion = tr.id_datosTransaccion INNER JOIN articulos AS a ON tr.id_articulo = a.id_articulo INNER JOIN abonos AS ab ON c.id_cliente = ab.id_cliente WHERE CONCAT(c.nombre_cliente, ' ', c.apellidos_cliente) =? GROUP BY dt.id_datosTransaccion";
                    try (PreparedStatement ps = cn.prepareStatement(sql)) {
                                ps.setString(1, clienteSeleccionado);
                                ResultSet rs = ps.executeQuery();
                        if (rs.next()) {
                            text_liquidacion.setEnabled(true);
                            text_cuenta.setText(rs.getString("cuenta"));
                            text_importeTotal.setText(rs.getString("importe"));
                            text_abonos.setText(rs.getString("abonos_realizados"));
                            text_cobrar.setText(rs.getString("cobrar"));
                            text_articulo.setText(rs.getString("articulos_comprados"));
                        }
                    } catch (SQLException ex) {
                        System.out.println("Error al obtener datos del cliente: " + ex.getMessage());
                    }
                } else {
                    text_importeTotal.setText("");
                    text_cobrar.setText("");
                    text_cuenta.setText("");
                }
            }
        });
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmb_cliente = new javax.swing.JComboBox<>();
        text_buscarCliente = new javax.swing.JTextField();
        btn_buscarcliente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cmb_usuario = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        text_importeTotal = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        text_cobrar = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        text_liquidacion = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        text_articulo = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        btn_registro = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        text_fecha = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        text_abonos = new javax.swing.JTextArea();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        text_cuenta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cliente:");

        setClosable(true);
        setMaximizable(true);
        setResizable(true);

        jPanel1.setBackground(new java.awt.Color(204, 204, 255));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Cliente:");

        cmb_cliente.setBackground(new java.awt.Color(255, 255, 255));
        cmb_cliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cmb_cliente.setForeground(new java.awt.Color(0, 0, 0));
        cmb_cliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione cliente" }));

        text_buscarCliente.setBackground(new java.awt.Color(255, 255, 255));
        text_buscarCliente.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_buscarCliente.setForeground(new java.awt.Color(0, 0, 0));

        btn_buscarcliente.setBackground(new java.awt.Color(204, 204, 204));
        btn_buscarcliente.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btn_buscarcliente.setForeground(new java.awt.Color(0, 0, 0));
        btn_buscarcliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/lupa.png"))); // NOI18N
        btn_buscarcliente.setText("Buscar");
        btn_buscarcliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_buscarclienteActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Usuario:");

        cmb_usuario.setBackground(new java.awt.Color(255, 255, 255));
        cmb_usuario.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        cmb_usuario.setForeground(new java.awt.Color(0, 0, 0));
        cmb_usuario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione usuario" }));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Importe total:");

        text_importeTotal.setBackground(new java.awt.Color(255, 255, 255));
        text_importeTotal.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_importeTotal.setForeground(new java.awt.Color(0, 0, 0));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Por cobrar:");

        text_cobrar.setBackground(new java.awt.Color(255, 255, 255));
        text_cobrar.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_cobrar.setForeground(new java.awt.Color(0, 0, 0));

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 0));
        jLabel11.setText("Monto de liquidación:");

        text_liquidacion.setBackground(new java.awt.Color(255, 255, 255));
        text_liquidacion.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_liquidacion.setForeground(new java.awt.Color(0, 0, 0));

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 255));

        text_articulo.setBackground(new java.awt.Color(255, 255, 255));
        text_articulo.setColumns(20);
        text_articulo.setForeground(new java.awt.Color(0, 0, 0));
        text_articulo.setRows(5);
        jScrollPane1.setViewportView(text_articulo);

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Articulos:");

        btn_registro.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btn_registro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/anadir.png"))); // NOI18N
        btn_registro.setText("Registrar liquidación");
        btn_registro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_registroActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Fecha y hora:");

        text_fecha.setBackground(new java.awt.Color(255, 255, 255));
        text_fecha.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_fecha.setForeground(new java.awt.Color(0, 0, 0));

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));

        text_abonos.setBackground(new java.awt.Color(255, 255, 255));
        text_abonos.setColumns(20);
        text_abonos.setForeground(new java.awt.Color(0, 0, 0));
        text_abonos.setRows(5);
        jScrollPane2.setViewportView(text_abonos);

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Abonos:");

        jLabel12.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 0));
        jLabel12.setText("A cuenta:");

        text_cuenta.setBackground(new java.awt.Color(255, 255, 255));
        text_cuenta.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        text_cuenta.setForeground(new java.awt.Color(0, 0, 0));

        jButton1.setBackground(new java.awt.Color(204, 204, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/flecha-izquierda.png"))); // NOI18N
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondoventana.jpeg"))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Source Sans Pro", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Nueva liquidación");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel9)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(text_importeTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 119, Short.MAX_VALUE)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_cobrar, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(58, 58, 58))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmb_cliente, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(text_buscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btn_buscarcliente)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel3)
                                .addGap(3, 3, 3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(55, 55, 55)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(text_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addGap(139, 139, 139)))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(cmb_usuario, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(text_liquidacion, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(25, 25, 25)))
                .addGap(213, 213, 213))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_registro)
                .addGap(575, 575, 575))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel4)
                                .addComponent(text_fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmb_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_buscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_buscarcliente)
                    .addComponent(jLabel3)
                    .addComponent(cmb_usuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel8))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel9)))
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_importeTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(text_cobrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_liquidacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(text_cuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(btn_registro)
                .addContainerGap(164, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_buscarclienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_buscarclienteActionPerformed
        // TODO add your handling code here:

        int idDatosTransaccion  = Integer.parseInt(text_buscarCliente.getText().trim());
    
        Connection cn=Conexion.Conectar();
        String sql="SELECT c.id_cliente, CONCAT(c.nombre_cliente, ' ', c.apellidos_cliente) AS cliente, GROUP_CONCAT(DISTINCT CONCAT(tr.cantidad, ' ', a.nombre_articulo, ' - ', a.descripcion_articulo, ' - $', a.precio_articulo) SEPARATOR '\\n') AS articulos_comprados, GROUP_CONCAT(DISTINCT CONCAT('Abono de ', ab.monto_abono, ' el ', ab.fecha_abono) SEPARATOR '\\n') AS abonos_realizados, dt.importe_total AS importe, dt.valorPagar AS cobrar, dt.aCuenta AS cuenta FROM cliente AS c JOIN datos_transaccion AS dt ON c.id_cliente = dt.id_cliente INNER JOIN transacciones AS tr ON dt.id_datosTransaccion = tr.id_datosTransaccion INNER JOIN articulos AS a ON tr.id_articulo = a.id_articulo LEFT JOIN abonos AS ab ON c.id_cliente = ab.id_cliente AND dt.id_datosTransaccion = ab.id_datosTransaccion WHERE dt.id_datosTransaccion = ? GROUP BY dt.id_datosTransaccion, c.id_cliente;"; 
        PreparedStatement st;
        try{
            st=cn.prepareStatement(sql);
            st.setInt(1, idDatosTransaccion);
            ResultSet rs=st.executeQuery();
            if(rs.next()){
                //seleccionar el cliente escrito
                cmb_cliente.setSelectedItem(rs.getString("cliente"));
                text_articulo.setText(rs.getString("articulos_comprados"));
                text_abonos.setText(rs.getString("abonos_realizados"));
                text_importeTotal.setText(rs.getString("importe"));
                text_cuenta.setText(rs.getString("cuenta"));
                text_cobrar.setText(rs.getString("cobrar"));
            }else{
                cmb_cliente.setSelectedItem("Seleccione cliente");
                text_abonos.setText("");
                text_articulo.setText("");
                JOptionPane.showMessageDialog(null, "id incorrecto o no encontrado");
                
            }
            cn.close();
        }catch(SQLException e){
            System.out.println("Error al buscar cliente "+ e);
        }
    }//GEN-LAST:event_btn_buscarclienteActionPerformed

    private void btn_registroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_registroActionPerformed
        // TODO add your handling code here:
        Liquidacion liquidacion=new Liquidacion();
        CtrlLiquidacion ctliquidacion=new CtrlLiquidacion();
        
        String fechaActual = "";
        Date date = new Date();
        fechaActual = new SimpleDateFormat("yyyy/MM/dd").format(date);
        
        String combo=this.cmb_cliente.getSelectedItem().toString();
        String combo2=this.cmb_usuario.getSelectedItem().toString();
        if(combo.equalsIgnoreCase("Seleccione cliente")){
            JOptionPane.showMessageDialog(null, "Seleccione un cliente");
        }else{
            if(combo2.equalsIgnoreCase("Seleccione usuario")){
                 JOptionPane.showMessageDialog(null, "Seleccione un usuario");
            }else{
                int cliente = idCliente.get(cmb_cliente.getSelectedIndex() - 1);
                int usuario = idUsuario.get(cmb_usuario.getSelectedIndex() - 1);
                liquidacion.setId_cliente(cliente);
                
                // Aquí obtienes el id_datosTransaccion del cliente
                String textoID = text_buscarCliente.getText().trim();
                if (!textoID.isEmpty()) {
                    try {
                        int idDatosTransaccion = Integer.parseInt(textoID);
                        liquidacion.setId_datosTransaccion(idDatosTransaccion);
                        liquidacion.setId_usuario(usuario);
                liquidacion.setFecha_liquidacion(fechaActual);
                liquidacion.setMonto_liquidacion(Double.parseDouble(text_liquidacion.getText()));
                if(ctliquidacion.registrar(liquidacion)){
                    JOptionPane.showMessageDialog(null, "Liquidacion registrada");
                    LiquidacionPdf pdf=new LiquidacionPdf();
                    pdf.DatosCliente(cliente);
                    List<String> articulosComprados = pdf.DatosArticulos(cliente);
                    pdf.generarLiquidacionPDF(articulosComprados); 
                    this.restarValorCobrar(idDatosTransaccion, Double.parseDouble(text_liquidacion.getText()));
                    this.limpiar();
                    cmb_cliente.setSelectedItem("Seleccione cliente");
                    cmb_usuario.setSelectedItem("Seleccione usuario");
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Error al registrar liquidacion");

                }
                    } catch (NumberFormatException e) {
                        System.out.println("Error al convertir el ID de transacción a entero: " + e);
                        JOptionPane.showMessageDialog(null, "El ID de transacción debe ser un número válido");
                        return;
                    }
                
                
                }
                else {
                    System.out.println("El campo de ID de transacción está vacío");
                    JOptionPane.showMessageDialog(null, "Debe ingresar un ID de transacción");
                    return;
                }
        }
        }
    }//GEN-LAST:event_btn_registroActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanel1.setVisible(false);
        menu.mostrarImagenDeFondo();
        menu.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_buscarcliente;
    private javax.swing.JButton btn_registro;
    private javax.swing.JComboBox<String> cmb_cliente;
    private javax.swing.JComboBox<String> cmb_usuario;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTextArea text_abonos;
    public static javax.swing.JTextArea text_articulo;
    private javax.swing.JTextField text_buscarCliente;
    public static javax.swing.JTextField text_cobrar;
    public static javax.swing.JTextField text_cuenta;
    public static javax.swing.JTextField text_fecha;
    public static javax.swing.JTextField text_importeTotal;
    public static javax.swing.JTextField text_liquidacion;
    // End of variables declaration//GEN-END:variables
    private void limpiar(){
        text_liquidacion.setText("");
        text_articulo.setText("");
        text_cobrar.setText("");
        text_importeTotal.setText("");
        text_abonos.setText("");
        text_cuenta.setText("");
    }
    
    private void cargarComboClientes() {
        Connection cn = Conexion.Conectar();
        String query = "SELECT * FROM cliente";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(query);
            cmb_cliente.removeAllItems();
            cmb_cliente.addItem("Seleccione cliente");
            while (rs.next()) {
                cmb_cliente.addItem(rs.getString("nombre_cliente") + " " + rs.getString("apellidos_cliente"));
                idCliente.add(rs.getInt("id_cliente"));
            }
            cn.close();
        } catch (SQLException ex) {
            System.out.println("Error al cargar clientes");
        }
    }
    private void cargarComboUsuarios() {
        Connection cn = Conexion.Conectar();
        String query = "SELECT * FROM usuarios";
        Statement st;
        try {
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(query);
            cmb_usuario.removeAllItems();
            cmb_usuario.addItem("Seleccione usuario");
            while (rs.next()) {
                cmb_usuario.addItem(rs.getString("nombre_usuario") + " " + rs.getString("apellidos_usuario"));
                idUsuario.add(rs.getInt("id_usuario"));
            }
            cn.close();
        } catch (SQLException ex) {
            System.out.println("Error al cargar usuarios");
        }
    }
    private void restarValorCobrar(int idTransaccion , double abono) {
        double porCobrarBD = 0.0;
        //obtener los datos del producto para hacer la resta
        try {
            Connection cn = Conexion.Conectar();
            String sql = "SELECT id_datosTransaccion,valorPagar  FROM datos_transaccion WHERE id_datosTransaccion= '" + idTransaccion + "'";
            Statement st;
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                porCobrarBD = rs.getDouble("valorPagar");
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al restar cantidad" + e);
        }
        try {
            Connection cn = Conexion.Conectar();
            //SENTENCIA QUE SE VA AUTLIZAR PARA ACTUALIZAR PRODUCTOS
            PreparedStatement consulta = cn.prepareStatement("UPDATE datos_transaccion SET valorPagar=? WHERE id_datosTransaccion='" + idTransaccion + "'");
            double montoNuevo = porCobrarBD - abono;
            //enviar a bd 
            consulta.setDouble(1, montoNuevo);
            if (consulta.executeUpdate() > 0) {
                System.out.println("Todo bien");
            }
            cn.close();
        } catch (SQLException e) {
            System.out.println("Error al restar cantidad 1" + e);
        }
    }
}
